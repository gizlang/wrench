name: Go CI
on:
  - push
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ^1
      - run: go test ./...
  release:
      - name: Release
        run: |
          DATE=$(date)
          GOVERSION=$(go version)
          VERSION=$(git describe --tags --abbrev=8 --dirty --always --long)
          COMMIT_TITLE=$(git log --pretty=format:%s HEAD^1..HEAD)
          PREFIX="github.com/hexops/wrench/internal/wrench"
          LDFLAGS="-X '$PREFIX.Version=$VERSION'"
          LDFLAGS="$LDFLAGS -X '$PREFIX.CommitTitle=$COMMIT_TITLE'"
          LDFLAGS="$LDFLAGS -X '$PREFIX.Date=$DATE'"
          LDFLAGS="$LDFLAGS -X '$PREFIX.GoVersion=$GOVERSION'"
          RELEASE_NAME="release-$(git rev-parse --short HEAD)"

          GOARCH="amd64" GOOS="linux" go build -ldflags "$LDFLAGS" -o wrench_linux_amd64 .
          GOARCH="arm64" GOOS="linux" go build -ldflags "$LDFLAGS" -o wrench_linux_arm64 .
          GOARCH="amd64" GOOS="windows" go build -ldflags "$LDFLAGS" -o wrench_windows_amd64 .
          GOARCH="arm64" GOOS="windows" go build -ldflags "$LDFLAGS" -o wrench_windows_arm64 .
          GOARCH="amd64" GOOS="darwin" go build -ldflags "$LDFLAGS" -o wrench_darwin_amd64 .
          GOARCH="arm64" GOOS="darwin" go build -ldflags "$LDFLAGS" -o wrench_darwin_arm64 .

          gh release create "$RELEASE_NAME" --title "Automatic release of main @ $(git rev-parse --short HEAD)"
          gh release upload "$RELEASE_NAME" "wrench_linux_amd64"
          gh release upload "$RELEASE_NAME" "wrench_linux_arm64"
          gh release upload "$RELEASE_NAME" "wrench_windows_amd64"
          gh release upload "$RELEASE_NAME" "wrench_windows_arm64"
          gh release upload "$RELEASE_NAME" "wrench_darwin_amd64"
          gh release upload "$RELEASE_NAME" "wrench_darwin_arm64"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
